cmake_minimum_required(VERSION 3.5.1)
project(TCR_Windmill)
FILE(GLOB_RECURSE sourcefiles bash.h  "armor/src/*.cpp" "others/src/*.cpp" "buff/src/*.cpp")
set(CMAKE_CXX_STANDARD 14)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/buff/include/)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/armor/include/)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/others/include/)
#add_executable(TCR_Windmill main.cpp buff_detect.h base.h serialport.h solve_angle.h thread_control.h buff_detect.cpp serialport.cpp solve_angle.cpp thread_control.cpp camera_device.cpp camera_device.h)
add_executable(TCR_Windmill main.cpp ${sourcefiles} others/include/camera/save_video.h others/src/save_video.cpp)
#add_executable(TCR_Windmill main.cpp ${sourcefiles} others/include/camera/wrapper_head.h others/include/camera/camera_wrapper.h others/src/additions.cpp)
set(OpenCV_DIR /usr/local/opencv340/lib/cmake/opencv4)
find_package(OpenCV REQUIRED)
#include_directories(SYSTEM ${OpenCV_INCLUDE_DIRS} /usr/local/opencv340/include)
target_link_libraries(TCR_Windmill ${OpenCV_LIBS})
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++14 -pthread")

#include_directories(/home/czh/CLionProjects/TCR-Windmill/DxImageProc.h)
#include_directories(/home/czh/CLionProjects/TCR-Windmill/GxIAPI.h)
target_link_libraries(TCR_Windmill ${OpenCV_LIBS} libgxiapi.so)
include_directories(usr/lib/libgxiapi.so)
LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/others)
TARGET_LINK_LIBRARIES(TCR_Windmill "${PROJECT_SOURCE_DIR}/others/libMVSDK.so")

